<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Chess.UI.Views">

    <!--  Combobox  -->

    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}" />
        <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorSecondary}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="CornerRadius" Value="8" />
    </Style>


    <Style x:Key="SettingComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource ComboBoxStyle}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Width" Value="150" />
    </Style>


    <!-- Images -->

    <Style x:Key="CapturedPieceImageStyle" TargetType="Image">
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
    </Style>

    <Style x:Key="CurrentPlayerImageStyle" TargetType="Image">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50" />
    </Style>

    <Style x:Key="MainMenuImageStyle" TargetType="Image">
        <Setter Property="Stretch" Value="Uniform" />
        <Setter Property="Height" Value="90" />
        <Setter Property="Width" Value="100" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>


    <!--  Button  -->

    <Style x:Key="MainMenuButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="100" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!-- Button background with hover effect -->
                        <Border
                        x:Name="ButtonBackground"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        </Border>

                        <!-- Content presenter to display the button content -->
                        <ContentPresenter
                        x:Name="ContentPresenter"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        AutomationProperties.AccessibilityView="Raw"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTransitions="{TemplateBinding ContentTransitions}" />

                        <!-- Visual states for different button states -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <!-- Pointer over state - subtle highlight effect -->
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonBackground" Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0.8" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0.8" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <!-- Pressed state - more distinctive effect -->
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonBackground" Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0.6" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0.6" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <!-- Disabled state -->
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonBackground" Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0.3" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0.3" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GameButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="50" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorSecondary}"/>
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}"/>
    </Style>

    <Style x:Key="FontIconButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="40" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorSecondary}"/>
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}"/>
    </Style>

    <Style x:Key="PreferencesButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="40" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorSecondary}"/>
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}"/>
    </Style>

    <Style x:Key="MPStartButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="150" />
        <Setter Property="Height" Value="40" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorSecondary}"/>
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}"/>
    </Style>


    <!--  TextBlock  -->

    <Style x:Key="MainMenuTitleStyles" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="30" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="CapturedPieceNumberStyle" TargetType="TextBlock">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}"/>
    </Style>

    <Style x:Key="SettingsTitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="CharacterSpacing" Value="20" />
    </Style>

    <Style x:Key="SettingsSubTitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="CharacterSpacing" Value="12" />
    </Style>

    <Style x:Key="SettingsDescription" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="CharacterSpacing" Value="0" />
    </Style>

    <Style x:Key="MPTitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Margin" Value="16" />
        <Setter Property="CharacterSpacing" Value="20" />
    </Style>

    <Style x:Key="MPSubTitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="CharacterSpacing" Value="16" />
    </Style>

    <Style x:Key="MPDesc" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="14" />
    </Style>


    <!--  TextBox  -->

    <Style x:Key="PlainTextEnter" TargetType="TextBox">
        <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorSecondary}" />
        <Setter Property="Foreground" Value="{ThemeResource TextFillColorPrimaryBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Border
                            x:Name="BorderElement"
                            MinWidth="{TemplateBinding MinWidth}"
                            MinHeight="{TemplateBinding MinHeight}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}" />
                        <ScrollViewer
                            x:Name="ContentElement"
                            Margin="8,4"
                            Padding="{TemplateBinding Padding}"
                            AutomationProperties.AccessibilityView="Raw"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                            IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                            IsTabStop="False"
                            IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                            VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                            ZoomMode="Disabled" />
                        <TextBlock
                            x:Name="PlaceholderTextContentPresenter"
                            Grid.Column="0"
                            Margin="8,4"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Foreground="{ThemeResource TextControlPlaceholderForeground}"
                            IsHitTestVisible="False"
                            Text="{TemplateBinding PlaceholderText}"
                            TextAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Border -->

    <Style x:Key="BackgroundBorder" TargetType="Border">
        <Setter Property="Background" Value="{ThemeResource CardBackgroundFillColorDefault}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="BorderBrush" Value="{StaticResource CardStrokeColorDefault}"/>
        <Setter Property="Margin" Value="16,0,16,0"/>

    </Style>

</ResourceDictionary>
